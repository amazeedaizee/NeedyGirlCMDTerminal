//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeedyGirlCMDTerminal {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NeedyGirlCMDTerminal.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                                                      ######@@@@#                     ####           
        ///                                                  ## ###     @@@@@@##****######    ## @**##         
        ///                                                #  ##          @@#      @@@ **#@@@#  @@@####  ***   
        ///                                              #  ##           ##    ****@@@@@@@@@#  ##  #####*****  
        ///                                             # ##           ##     *    @@@@  #@@   # ## ###********
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string angelASCIIart {
            get {
                return ResourceManager.GetString("angelASCIIart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///ACTION | A: 
        ///
        ///Does an action based on the shortcuts on the left of the desktop. 
        ///Cannot be used during the Login/Caution scene or when choosing a zip file.
        ///
        ///====================================================================================
        ///
        ///&gt; action {stream | 1 | s}
        ///
        ///Opens the Stream window (to choose what to stream). Can only be done at night.
        ///Can also play specific streams based on the current ending (if applicable)
        ///
        ///------------------------------------------------------------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_action_main {
            get {
                return ResourceManager.GetString("Help_action_main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///This list contains all &lt;child actions&gt; for each &lt;parent action&gt; to use in the 
        ///command:
        ///
        ///&gt; action &lt;parent action&gt; &lt;child action&gt; [force | f]
        ///
        ///====================================================================================
        ///
        ///Parent Action                     Child Action
        ///~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ///
        ///{hangout | h | 2}:                {game | g |1}
        ///                                  {ame | a | 2}
        ///                                  {sex |  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_action_parent {
            get {
                return ResourceManager.GetString("Help_action_parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///CAUTION: 
        ///
        ///Does specific commands related to the Caution Screen. Only applies at the
        ///Caution Screen while in the Login/Caution Scene.
        ///
        ///====================================================================================
        ///
        ///&gt; caution ok
        ///
        ///Continues to the Login Screen.
        ///
        ///------------------------------------------------------------------------------------
        ///
        ///&gt; caution cancel
        ///
        ///Quits the game.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_caution {
            get {
                return ResourceManager.GetString("Help_caution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///CUT: 
        ///
        ///Does an action related to Self-Destruct. Only applies when the Self-Destruct
        ///window can be interacted with.
        ///
        ///====================================================================================
        ///
        ///&gt; cut
        ///
        ///Places a mark in the Self-Destruct window.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_cut {
            get {
                return ResourceManager.GetString("Help_cut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///DEBUG: 
        ///
        ///Does specific commands depending on its arguments and the game&apos;s current scene.
        ///Only applies if the game is currently in Debug Mode.
        ///
        ///====================================================================================
        ///Login/Caution Scene
        ///------------------------------------------------------------------------------------
        ///
        ///&gt; debug
        ///
        ///Loads the Test Scene.
        ///
        ///====================================================================================
        ///Normal Scene
        ///------------------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_debug {
            get {
                return ResourceManager.GetString("Help_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///ENDING | END: 
        ///
        ///Does commands related to endings.
        ///
        ///====================================================================================
        ///
        ///&gt; ending
        ///
        ///This command changes depending on if the ending dialog or the ending blue screen is 
        ///open or not. Does not work otherwise.
        ///
        ///If Ending Dialog Is Open
        ///~~~~~~~~~~~~~~~~~~~~~~~~
        ///Clicks on the OK button for the Ending Dialog.
        ///
        ///If Blue Screen Is Active
        ///~~~~~~~~~~~~~~~~~~~~~~~~
        ///Exits out of the Blue Screen and into either the Choose Zip scene or the         /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_ending {
            get {
                return ResourceManager.GetString("Help_ending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the Help command!
        ///
        ///Feeling lost about what to do? The help command will help you figure out 
        ///what command to use at the right time!
        ///
        ///Commands will usually have at least one parameter, but can sometimes
        ///have two or more. 
        ///
        ///You will know if its a command written in the terminal if it is
        ///written like this:
        ///
        ///&gt; help
        ///
        ///The description for the command is usually written below the
        ///actual command.
        ///
        ///There are also some parameters written with special brackets.
        ///Here&apos;s what each special brack [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_help {
            get {
                return ResourceManager.GetString("Help_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This section covers all main commands that you can use in the game.
        ///
        ///Each main command usually has more than one way to access it.
        ///Usually in short form such as a single letter representing the
        ///primary key-word.
        ///
        ///You can look at what key-words is associated with a main command by 
        ///looking at the title of their commands page.
        ///
        ///i.e. COMMAND | C
        ///
        ///NOTE: All key-words for commands have to be written in lower-case.
        ///      (with the exception of some, like custom messages)
        ///      The upper-case in the t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_help_command {
            get {
                return ResourceManager.GetString("Help_help_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///INFO | I: 
        ///
        ///Does a command related to showing game stats.
        ///
        ///====================================================================================
        ///
        ///&gt; info
        ///
        ///Shows current stats such as the current day. It will also show some stats that are 
        ///not as obvious like the current amount of ***.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_info {
            get {
                return ResourceManager.GetString("Help_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///JINE | J: 
        ///
        ///Does specific commands related to the Jine window.
        ///
        ///====================================================================================
        ///
        ///&gt; jine 
        ///
        ///Opens the Jine window if its not open.
        ///
        ///------------------------------------------------------------------------------------
        ///
        ///&gt; jine &lt;window state&gt;
        ///
        ///Sets the &lt;window state&gt; of the Jine window. This command is disabled for 
        ///specific endings.
        ///
        ///&lt;window state&gt;: {minimize | min | -}
        ///                {maximize | max | +}
        ///                 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_jine {
            get {
                return ResourceManager.GetString("Help_jine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///LOAD: 
        ///
        ///Does specific commands that involves loading a specific day. Some commands work 
        ///differently depending on the current scene.
        ///
        ///====================================================================================
        ///Login/Caution Scene
        ///....................................................................................
        ///
        ///&gt; load &lt;data number&gt; &lt;day number&gt;
        ///
        ///Loads a specific day. Only applies when a data save has not been chosen yet.
        ///
        ///&lt;data number&gt;: 1-3  (min/max inclusive)
        ///&lt;day number&gt;:  1-3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_load {
            get {
                return ResourceManager.GetString("Help_load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///LOGIN: 
        ///
        ///Logs into MeTube. Does not require a webpage to be open.
        ///
        ///====================================================================================
        ///
        ///&gt; login &lt;password&gt;
        ///
        ///Tries to log into MeTube based on the specified &lt;password&gt;.
        ///
        ///&lt;password&gt;: ??????????
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_login {
            get {
                return ResourceManager.GetString("Help_login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///NOTIFICATION | NOTIF | N: 
        ///
        ///Does a command related to notifications.
        ///
        ///====================================================================================
        ///
        ///&gt; notification
        ///
        ///Clicks on the last active notification on the bottom right.
        ///
        ///Also exits the epiphany window when it is shown on the screen.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_notif {
            get {
                return ResourceManager.GetString("Help_notif", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///OPEN: 
        ///
        ///Does a command that involves opening an in-game text file from the game.
        ///
        ///====================================================================================
        ///
        ///&gt; open &lt;filename&gt;
        ///
        ///Opens the selected file that matches &lt;filename&gt;. 
        ///File has to be an in-game text file.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_open {
            get {
                return ResourceManager.GetString("Help_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///OPTIONS: 
        ///
        ///Does specific commands related to setting game options.
        ///
        ///====================================================================================
        ///
        ///&gt; options {language | lang | l} &lt;language&gt;
        ///
        ///Sets the game language based on the specified &lt;language&gt;.
        ///&lt;language&gt; is not case-sensitive.
        ///
        ///&lt;language&gt;: {JP | Japanese}
        ///            {EN | English}
        ///            {CN | Mandarin | Chinese}
        ///            {KO | Korean}
        ///            {TW | Cantonese}
        ///            {VN | Vietnamese}
        ///            {FR | French [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_options {
            get {
                return ResourceManager.GetString("Help_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///VIEW | PIC | PICTURE: 
        ///
        ///Does a command related to opening pictures from My Pictures.
        ///
        ///====================================================================================
        ///
        ///&gt; view &lt;picture id&gt;
        ///
        ///Opens a picture with the matching &lt;picture id&gt;. If the picture isn&apos;t available, 
        ///a placeholder will be shown instead.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_pic {
            get {
                return ResourceManager.GetString("Help_pic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///READ: 
        ///
        ///Does a command that involves reading an in-game text file from the game.
        ///
        ///====================================================================================
        ///
        ///&gt; read &lt;filename&gt;
        ///
        ///Reads text from the selected file that matches &lt;filename&gt;. 
        ///File has to be an in-game text file.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_read {
            get {
                return ResourceManager.GetString("Help_read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///RELOAD: 
        ///
        ///Does a command that involves reloading the current day.
        ///
        ///====================================================================================
        ///
        ///&gt; reload
        ///
        ///Reloads the current day.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_reload {
            get {
                return ResourceManager.GetString("Help_reload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///RESET | RESTART: 
        ///
        ///Does a command that involves restarting the game.
        ///
        ///====================================================================================
        ///
        ///&gt; reset [force | f]
        ///
        ///Resets the game back to the Login/Caution screen.
        ///
        ///Including [force | f] will reset the game instantly, without opening a dialog box.
        ///
        ///NOTE: This command will only work when the taskbar is interactable.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_reset {
            get {
                return ResourceManager.GetString("Help_reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SHUTDOWN: 
        ///
        ///Does a command that involves shuting down the game.
        ///
        ///====================================================================================
        ///
        ///&gt; shutdown [force | f]
        ///
        ///Quits the game.
        ///
        ///Including [force | f] will quit the game instantly, without opening a dialog box.
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_shutdown {
            get {
                return ResourceManager.GetString("Help_shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///STREAM | S: 
        ///
        ///Does specific commands related to the current playing stream.
        ///
        ///NOTE: THESE COMMANDS DO NOT INVOLVE CHOOSING AND THEN PLAYING A SPECIFIC STREAM.
        ///      To choose a stream to play, see the action command for more.
        ///      &gt; help action
        ///
        ///====================================================================================
        ///
        ///&gt; stream {skip | x}
        ///
        ///Skips the current playing stream entirely.
        ///
        ///NOTE: This command only works if the skip button is visible.
        ///
        ///----------------------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_stream {
            get {
                return ResourceManager.GetString("Help_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///TWEETER | POKETTER | P | J: 
        ///
        ///Does specific commands related to the Tweeter window.
        ///
        ///====================================================================================
        ///
        ///&gt; tweeter 
        ///
        ///Opens the Tweeter window if its not open.
        ///
        ///------------------------------------------------------------------------------------
        ///
        ///&gt; tweeter &lt;window state&gt;
        ///
        ///Sets the &lt;window state&gt; of the Tweeter window. This command is disabled for 
        ///specific endings.
        ///
        ///&lt;window state&gt;: {minimize | min | -}
        ///                {maxi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_tweet {
            get {
                return ResourceManager.GetString("Help_tweet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///UNZIP: 
        ///
        ///Does a command related to unzipping a zip in the Choose Zip Scene.
        ///
        ///====================================================================================
        ///
        ///&gt; unzip &lt;number&gt;
        ///
        ///Unzips a specific zipped folder based on its zip &lt;number&gt;. Does not unzip zips that
        ///are already unzipped.
        ///
        ///&lt;number&gt;: 1-30 (min/max inclusive)
        ///
        ///====================================================================================
        ///
        ///.
        /// </summary>
        internal static string Help_unzip {
            get {
                return ResourceManager.GetString("Help_unzip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///WEBCAM | AME: 
        ///
        ///Does specific commands related to the Webcam.
        ///
        ///====================================================================================
        ///
        ///&gt; webcam pat /number/
        ///
        ///Headpats Ame. 
        ///
        ///Including a /number/ headpats her the specified number of times. 
        ////number/ has to be above zero.
        ///
        ///------------------------------------------------------------------------------------
        ///
        ///&gt; webcam random
        ///
        ///Sets the current idle animation to a random one (dependent on current stats)
        ///
        ///------------------------ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_webcam {
            get {
                return ResourceManager.GetString("Help_webcam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///WINDOW | W: 
        ///
        ///Does specific commands related to windows.
        ///
        ///====================================================================================
        ///
        ///&gt; window toggleall
        ///
        ///Either minimizes all windows if any are opened, or opens all windows.
        ///
        ///------------------------------------------------------------------------------------
        ///
        ///&gt; window &lt;selected window&gt; &lt;window state&gt;
        ///
        ///Sets the &lt;window state&gt; of the &lt;selected window&gt;.
        ///
        ///&lt;selected window&gt;: {active | a}
        ///                   {previous | prev | p}
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_window {
            get {
                return ResourceManager.GetString("Help_window", resourceCulture);
            }
        }
    }
}
